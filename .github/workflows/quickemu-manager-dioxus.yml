name: QuickEmu Manager - Dioxus Build

on:
  push:
    branches: [ main, master ]
    paths:
      - 'dioxus-app/**'
      - 'core/**'
      - 'spice-client/**'
      - '.github/workflows/quickemu-manager-dioxus.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'dioxus-app/**'
      - 'core/**'
      - 'spice-client/**'
      - '.github/workflows/quickemu-manager-dioxus.yml'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-web:
    name: Build Dioxus Web App
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown

    - name: Install Dioxus CLI
      run: cargo install dioxus-cli --locked

    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-wasm-${{ hashFiles('**/Cargo.lock') }}

    - name: Build Dioxus Web App
      run: |
        cd dioxus-app
        dx build --platform web --release

    - name: Upload Web Build
      uses: actions/upload-artifact@v4
      with:
        name: quickemu-manager-web
        path: dioxus-app/dist/
        if-no-files-found: error

  build-desktop:
    name: Build Dioxus Desktop - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwebkit2gtk-4.1-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libssl-dev \
          libxdo-dev \
          libglib2.0-dev \
          pkg-config

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install pkgconfiglite
    
    - name: Install Dioxus CLI
      run: cargo install dioxus-cli --locked

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-desktop-${{ hashFiles('**/Cargo.lock') }}

    - name: Build Desktop App
      run: |
        cd dioxus-app
        dx build --release --platform desktop

    - name: Upload artifacts (Unix)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: quickemu-manager-desktop-${{ matrix.target }}
        path: dioxus-app/dist/
        if-no-files-found: error

    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: quickemu-manager-desktop-${{ matrix.target }}
        path: dioxus-app/dist/
        if-no-files-found: error

  deploy-web:
    name: Deploy Web App to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Download Web Build
      uses: actions/download-artifact@v4
      with:
        name: quickemu-manager-web
        path: dist

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-web, build-desktop]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Web App Archive
      run: |
        cd quickemu-manager-web
        zip -r ../quickemu-manager-web.zip .
        cd ..

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          quickemu-manager-desktop-*/dioxus-app
          quickemu-manager-desktop-*/dioxus-app.exe
          quickemu-manager-web.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}