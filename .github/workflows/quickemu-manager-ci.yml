name: QuickEmu Manager - CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Code formatting check - Linux only
  format:
    name: Code Formatting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      
      - name: Check formatting
        run: cargo fmt --all -- --check

  # Clippy linting - Linux only
  clippy:
    name: Clippy Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      - name: Install Linux dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-4-dev libadwaita-1-dev libwebkit2gtk-4.1-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev libxdo-dev libglib2.0-dev
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features

  # Unit tests - Linux only
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install Linux dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-4-dev libadwaita-1-dev libwebkit2gtk-4.1-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev libxdo-dev libglib2.0-dev

      - name: Run tests
        run: cargo test --workspace

  # Build on all platforms
  build:
    name: Build - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Set Windows build environment
        if: matrix.os == 'windows-latest'
        run: |
          echo "RUSTFLAGS=-C link-arg=advapi32.lib -C link-arg=userenv.lib -C link-arg=crypt32.lib" >> $env:GITHUB_ENV

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libgtk-4-dev libadwaita-1-dev libwebkit2gtk-4.1-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev libxdo-dev libglib2.0-dev

      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install gtk4 libadwaita gstreamer gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly pkg-config
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Build core library
        working-directory: core
        run: cargo build --release

      - name: Build spice-client library
        working-directory: spice-client
        run: cargo build --release

      - name: Build spice-client GTK app (Linux/macOS only)
        if: matrix.os != 'windows-latest'
        working-directory: spice-client
        run: cargo build --release --features backend-gtk4 --bin rusty-spice-gtk

      - name: Build GTK4 app (Linux/macOS only)
        if: matrix.os != 'windows-latest'
        working-directory: gtk4-app
        run: cargo build --release

      - name: Build Dioxus app
        working-directory: dioxus-app
        run: dx build --release --platform desktop

  # WASM build - Linux only
  build-wasm:
    name: Build WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
      - name: Install Dioxus CLI
        run: cargo install dioxus-cli
      
      - name: Build spice-client WASM
        working-directory: spice-client
        run: wasm-pack build --target web --out-dir pkg --no-default-features
      
      - name: Build Dioxus app WASM
        working-directory: dioxus-app
        run: dx build --release --platform web

  # SPICE client specific tests - Linux only
  spice-client-tests:
    name: SPICE Client Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-4-dev libadwaita-1-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev

      - name: Run unit tests
        working-directory: spice-client
        run: cargo test --lib --features backend-gtk4

      - name: Run integration tests
        working-directory: spice-client
        run: cargo test --test integration --features backend-gtk4