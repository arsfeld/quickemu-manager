version: '3.8'

services:
  # SPICE test server (reuse from integration tests)
  spice-server:
    build:
      context: ../tests/docker
      dockerfile: Dockerfile.spice-server
    image: spice-test-server:latest
    container_name: spice-wasm-core-test-server
    ports:
      - "5900-5910:5900-5910"
    environment:
      - SPICE_DEBUG_LEVEL=2  # Less verbose for core tests
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5900"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  # Lightweight WebSocket proxy
  websocket-proxy:
    build:
      context: .
      dockerfile: Dockerfile.ws-proxy
    environment:
      - SPICE_HOST=spice-server
      - WS_BASE_PORT=8080
      - MAIN_CHANNEL_PORT=5900
      - DISPLAY_CHANNEL_PORT=5901
      - INPUTS_CHANNEL_PORT=5902
      - CURSOR_CHANNEL_PORT=5903
    ports:
      - "8080-8083:8080-8083"
    depends_on:
      spice-server:
        condition: service_healthy
    volumes:
      - ./websocket-proxy-multi.py:/app/proxy.py:ro
    command: python /app/proxy.py

  # Core WASM test runner (Node.js based, no browser)
  wasm-core-test:
    build:
      context: .
      dockerfile: Dockerfile.node-test
    environment:
      - WS_MAIN_URL=ws://websocket-proxy:8080/main
      - WS_DISPLAY_URL=ws://websocket-proxy:8081/display
      - WS_INPUTS_URL=ws://websocket-proxy:8082/inputs
      - WS_CURSOR_URL=ws://websocket-proxy:8083/cursor
      - TEST_TIMEOUT=30000
      - NODE_ENV=test
      - NODE_PATH=/app/node_modules
    volumes:
      - ../tests/wasm-core:/app/tests:ro
      - ../pkg:/app/pkg:ro  # WASM build output
    depends_on:
      - websocket-proxy
    working_dir: /app/tests
    command: |
      sh -c "
        echo '=== Running Core E2E Tests ==='
        node core-e2e-test.js
        CORE_RESULT=$?
        echo ''
        echo '=== Running SPICE Protocol Tests ==='
        node spice-protocol-test.js
        PROTOCOL_RESULT=$?
        exit $((CORE_RESULT + PROTOCOL_RESULT))
      "