# Build stage with cargo-chef for optimal caching
FROM lukemathwalker/cargo-chef:latest-rust-1 AS chef
WORKDIR /build

# Install WASM target
RUN rustup target add wasm32-wasi

# Plan the build - this analyzes Cargo.toml and creates a recipe
FROM chef AS planner
COPY Cargo.toml Cargo.lock ./
COPY src ./src
RUN cargo chef prepare --recipe-path recipe.json

# Build dependencies using the recipe
FROM chef AS builder
COPY --from=planner /build/recipe.json recipe.json
# Build dependencies - this layer is cached until dependencies change
RUN cargo chef cook --release --recipe-path recipe.json --target wasm32-wasi --features wasm-core

# Build the application
COPY Cargo.toml Cargo.lock ./
COPY src ./src
COPY tests ./tests
RUN cargo build --target wasm32-wasi --features wasm-core --release

# Final stage
FROM debian:bookworm-slim

# Install wasmtime runtime
RUN apt-get update && apt-get install -y \
    curl \
    && curl https://wasmtime.dev/install.sh -sSf | bash \
    && mv /root/.wasmtime/bin/wasmtime /usr/local/bin \
    && apt-get remove -y curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy WASM binary
COPY --from=builder /build/target/wasm32-wasi/release/*.wasm ./

# Default command runs core protocol tests
CMD ["wasmtime", "run", "--wasi", "nn", "--wasi", "sockets", "spice_client_core.wasm"]